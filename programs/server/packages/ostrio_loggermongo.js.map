{"version":3,"sources":["meteor://ðŸ’»app/packages/ostrio_loggermongo/loggermongo.coffee"],"names":[],"mappings":"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","file":"/packages/ostrio_loggermongo.js","sourcesContent":["NOOP = -> return\n\n###\n@class LoggerMongo\n@summary MongoDB adapter for ostrio:logger (Logger)\n###\nclass LoggerMongo\n  constructor: (@logger, @options = {}) ->\n    check @logger, Match.OneOf Logger, Object\n    check @options, {\n      collectionName: Match.Optional String\n      collection: Match.Optional Match.OneOf Mongo.Collection, Object\n      format: Match.Optional Function\n    }\n\n    if not @options.collectionName and not @options.collection\n      throw new Meteor.Error 400, '[LoggerMongo]: `collectionName` or `collection` must be presented'\n\n    @options.format ?= (opts) -> return opts\n\n    self = @\n    if Meteor.isServer\n      if @options.collection\n        @collection = @options.collection\n      else\n        @options.collectionName ?= \"ostrioMongoLogger\"\n        @collection = new Meteor.Collection @options.collectionName\n        @collection.deny\n          update: -> true\n          remove: -> true\n          insert: -> true\n\n    self.logger.add 'Mongo', (level, message, data = null, userId) ->\n      if Meteor.isServer\n        time = new Date()\n        if data\n          data = self.logger.antiCircular data\n          if _.isString data.stackTrace\n            data.stackTrace = data.stackTrace.split /\\n|\\\\n|\\r|\\r\\n/g\n\n        record = self.options.format\n          userId: userId\n          date: time\n          timestamp: +time\n          level: level\n          message: message\n          additional: data\n\n        unless _.isObject record\n          throw new Meteor.Error(400, \"[ostrio:logger] [options.format]: Must return a plain Object!\", record) \n\n        self.collection.insert record, NOOP\n    , NOOP\n    , true\n\n  enable: (rule = {}) ->\n    check rule, {\n      enable: Match.Optional Boolean\n      client: Match.Optional Boolean\n      server: Match.Optional Boolean\n      filter: Match.Optional [String]\n    }\n\n    rule.enable ?= true\n    rule.client ?= false\n    rule.server ?= true\n\n    @logger.rule 'Mongo', rule\n    return @"]}
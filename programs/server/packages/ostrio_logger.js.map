{"version":3,"sources":["meteor://ðŸ’»app/packages/ostrio_logger/logger.coffee"],"names":[],"mappings":"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","file":"/packages/ostrio_logger.js","sourcesContent":["_inst = 0\n###\n@class Logger\n@summary Extend-able Logger class\n###\nclass Logger\n  userId: new ReactiveVar null\n  constructor: ->\n    @prefix = ++_inst\n    if Meteor.isClient\n      self = @\n      if Package?['accounts-base']\n        Tracker.autorun ->\n          self.userId.set Meteor.userId()\n    @_emitters = []\n    @_rules = {}\n\n  ###\n  @memberOf Logger\n  @name _log\n  @param level    {String} - Log level Accepts 'ERROR', 'FATAL', 'WARN', 'DEBUG', 'INFO', 'TRACE', 'LOG' and '*'\n  @param message  {String} - Text human-readable message\n  @param data     {Object} - [optional] Any additional info as object\n  @param userId   {String} - [optional] Current user id\n  @summary Pass log's data to Server or/and Client\n  ###\n  _log: (level, message, data = {}, user) =>\n    uid = user or @userId.get()\n    for i, em of @_emitters\n      if @_rules?[em.name] and @_rules[em.name].enable is true\n        if @_rules[em.name].allow.indexOf('*') isnt -1 or @_rules[em.name] and @_rules[em.name].allow.indexOf(level) isnt -1\n          if level is \"TRACE\"\n            if _.isString data\n              _data = data\n              data = {data: _data}\n            data.stackTrace = @_getStackTrace()\n\n          if Meteor.isClient and em.denyClient is true\n            Meteor.call em.method, level, message, data, uid\n          else if @_rules[em.name].client is true and @_rules[em.name].server is true and em.denyClient is false\n            em.emitter level, message, data, uid\n            if Meteor.isClient\n              Meteor.call em.method, level, message, data, uid\n          else if Meteor.isClient and @_rules[em.name].client is false and @_rules[em.name].server is true\n            Meteor.call em.method, level, message, data, uid\n          else\n            em.emitter level, message, data, uid\n\n    return new @_message\n      level: level\n      error: level\n      reason: message\n      errorType: level\n      message: message\n      details: data\n      data: data\n      user: uid\n      userId: uid\n\n  ###\n  @memberOf Logger\n  @name _message\n  @class LoggerMessage\n  @param data {Object}\n  @summary Construct message object, ready to be thrown and stringified\n  ###\n  _message: class LoggerMessage\n    constructor: (data) ->\n      {@level, @error, @reason, @message, @details, @data, @user, @userId} = data\n      @toString = -> \"[#{@reason}] \\r\\nLevel: #{@level}; \\r\\nDetails: #{JSON.stringify(Logger::antiCircular(@data))}; \\r\\nUserId: #{@userId};\"\n\n  ###\n  @memberOf Logger\n  @name rule\n  @param name    {String} - Adapter name\n  @param options {Object} - Settings object\n         options.enable {Boolean} - Enable/disable adapter\n         options.filter {Array}   - Array of strings, accepts: \n                                   'ERROR', 'FATAL', 'WARN', 'DEBUG', 'INFO', 'TRACE', 'LOG' and '*'\n                                   in lowercase or uppercase\n                                   default: ['*'] - Accept all\n         options.client {Boolean} - Allow execution on Client\n         options.server {Boolean} - Allow execution on Server\n  @summary Enable/disable adapter and set it's settings\n  ###\n  rule: (name, options) =>\n    check name, String\n    check options, {\n      enable: Boolean\n      client: Match.Optional Boolean\n      server: Match.Optional Boolean\n      filter: Match.Optional [String]\n    }\n\n    if options.filter\n      for rule in options.filter\n        rule = rule.toUpperCase()\n\n    options.filter ?= ['*']\n    options.client ?= false\n    options.server ?= true\n    options.enable ?= true\n\n    @_rules[name] =\n      enable: options.enable\n      allow:  options.filter\n      client: options.client\n      server: options.server\n    return\n\n  ###\n  @memberOf Logger\n  @name add\n  @param name        {String}    - Adapter name\n  @param emitter     {Function}  - Function called on Meteor.log...\n  @param init        {Function}  - Adapter initialization function\n  @param denyClient  {Boolean}   - Strictly deny execution on client, only pass via Meteor.methods\n  @summary Register new adapter to be used within ostrio:logger package\n  ###\n  add: (name, emitter, init, denyClient = false) =>\n    init and init()\n    @_emitters.push\n      name: name\n      emitter: emitter\n      method: \"#{@prefix}_logger_emit_#{name}\"\n      denyClient: denyClient\n\n    if Meteor.isServer\n      method = {}\n      method[\"#{@prefix}_logger_emit_#{name}\"] = (level, message, data, userId) ->\n        check level, String\n        check message, Match.Optional Match.OneOf Number, String, null\n        check data, Match.Optional Match.OneOf String, Object, null\n        check userId, Match.Optional Match.OneOf String, null\n        emitter level, message, data, (userId or @userId)\n      Meteor.methods method\n    return\n\n  ###\n  @memberOf Logger\n  @name info; debug; error; fatal; warn; trace; _\n  @param message {String} - Any text message\n  @param data    {Object} - [optional] Any additional info as object\n  @param userId  {String} - [optional] Current user id\n  @summary Functions below is shortcuts for _log() method\n  ###\n  info: (message, data, userId) -> @_log \"INFO\", message, data, userId\n  debug: (message, data, userId) -> @_log \"DEBUG\", message, data, userId\n  error: (message, data, userId) -> @_log \"ERROR\", message, data, userId\n  fatal: (message, data, userId) -> @_log \"FATAL\", message, data, userId\n  warn: (message, data, userId) -> @_log \"WARN\", message, data, userId\n  trace: (message, data, userId) -> @_log \"TRACE\", message, data, userId\n  log: (message, data, userId) -> @_log \"LOG\", message, data, userId\n  _: (message, data, userId) -> @_log \"LOG\", message, data, userId\n\n  ###\n  @memberOf Logger\n  @name antiCircular\n  @param data {Object} - Circular or any other object which needs to be non-circular\n  ###\n  antiCircular: (obj) ->\n    _cache = [];\n    _wrap = (obj) ->\n      for v, k of obj\n        if typeof v is \"object\" and v isnt null\n          if _cache.indexOf(v) isnt -1\n            obj[k] = \"[Circular]\"\n            return undefined\n          _cache.push v\n          return _wrap v\n    _wrap obj\n    return obj\n\n  ###\n  @memberOf Logger\n  @name _getStackTrace\n  @summary Prepare stack trace message\n  ###\n  _getStackTrace: ->\n    obj = {}\n    Error.captureStackTrace obj, @_getStackTrace\n    return obj.stack"]}
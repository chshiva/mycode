'use strict';

exports.access = function(path,mode){
	return new this.promise((resolve,reject) => {
		mode = mode || 'f';

		var level = 0;

		mode.split('').forEach((item) => {
			level += this._accessLevel(item);
		});

		this.fs.access(path,level,(error) => {
			if (error) {
				reject(error);
			}

			resolve();
		});
	});
};

exports.rename = function(source,target){
	return new this.promise((resolve,reject) => {
		source = this.normalize(source);
		target = this.normalize(target);

		this.fs.rename(source,target,(error) => {
			if (error) {
				reject(error);
			}

			resolve();
		});
	});
};
